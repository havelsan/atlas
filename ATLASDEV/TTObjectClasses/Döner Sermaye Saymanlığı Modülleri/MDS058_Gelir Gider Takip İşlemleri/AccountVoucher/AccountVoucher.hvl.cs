
using System;
using System.Xml;
using System.Data;
using System.Text;
using System.Drawing;
using System.Reflection;
using System.Collections;
using System.Linq;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Runtime.InteropServices;

using TTUtils;
using TTObjectClasses;
using TTDataDictionary;
using TTCoreDefinitions;
using TTConnectionManager;
using TTInstanceManagement;
using TTDefinitionManagement;
using TTStorageManager.Security;

using TTStorageManager;
using System.Runtime.Versioning;
namespace TTObjectClasses
{
    [Serializable, TTStorageManager.Attributes.ObjectDefAttribute(Name="AccountVoucher")] 

    public  partial class AccountVoucher : TTObject
    {
        public class AccountVoucherList : TTObjectCollection<AccountVoucher> { }
                    
        public class ChildAccountVoucherCollection : TTObject.TTChildObjectCollection<AccountVoucher>
        {
            public ChildAccountVoucherCollection(TTObject parent, Guid relDefID) : base(parent, relDefID) { }
            public ChildAccountVoucherCollection(TTObject.ITTChildObjectCollection parentCollection, string relSubtypeDefName) : base(parentCollection, relSubtypeDefName) { }
        }
                    
        [Serializable] 

        public partial class GetAccountVoucherTotal_Class : TTReportNqlObject 
        {
            public int? Year
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["YEAR"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTPERIODDEFINITION"].AllPropertyDefs["YEAR"].DataType;
                    return (int?)dataType.ConvertValue(val);
                }
            }

            public MonthsEnum? Month
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["MONTH"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTPERIODDEFINITION"].AllPropertyDefs["MONTH"].DataType;
                    return (MonthsEnum?)(int)dataType.ConvertValue(val);
                }
            }

            public Object Deptprice
            {
                get
                {
                    return Globals.FromDBValue(_dataRow["DEPTPRICE"]);
                }
            }

            public Object Nondeptprice
            {
                get
                {
                    return Globals.FromDBValue(_dataRow["NONDEPTPRICE"]);
                }
            }

            public GetAccountVoucherTotal_Class(TTObjectContext objectContext, string objectDefName, DataRow row) : base(objectContext, objectDefName, row) { }
            public GetAccountVoucherTotal_Class(SerializationInfo info, StreamingContext context) : base(info, context) { }
            protected GetAccountVoucherTotal_Class() : base() { }
        }

        [Serializable] 

        public partial class GetAccountVoucherWithParam_Class : TTReportNqlObject 
        {
            public Guid? ObjectID
            {
                get
                {
                    return ConnectionManager.FromDBNullableGuid(_dataRow["OBJECTID"]);
                }
            }

            public Guid? ObjectDefID
            {
                get
                {
                    return ConnectionManager.FromDBNullableGuid(_dataRow["OBJECTDEFID"]);
                }
            }

            public Guid? CurrentStateDefID
            {
                get
                {
                    return ConnectionManager.FromDBNullableGuid(_dataRow["CURRENTSTATEDEFID"]);
                }
            }

            public DateTime? LastUpdate
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["LASTUPDATE"]);
                    if (val == null)
                        return null;
                    return (DateTime)Convert.ChangeType(val, typeof(DateTime)); 
                }
            }

            public VoucherTypeEnum? VoucherType
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["VOUCHERTYPE"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].AllPropertyDefs["VOUCHERTYPE"].DataType;
                    return (VoucherTypeEnum?)(int)dataType.ConvertValue(val);
                }
            }

            public bool? IsAutoGenerated
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["ISAUTOGENERATED"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].AllPropertyDefs["ISAUTOGENERATED"].DataType;
                    return (bool?)dataType.ConvertValue(val);
                }
            }

            public Currency? TotalPrice
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["TOTALPRICE"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].AllPropertyDefs["TOTALPRICE"].DataType;
                    return (Currency?)dataType.ConvertValue(val);
                }
            }

            public bool? IsDept
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["ISDEPT"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].AllPropertyDefs["ISDEPT"].DataType;
                    return (bool?)dataType.ConvertValue(val);
                }
            }

            public MonthsEnum? Month
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["MONTH"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTPERIODDEFINITION"].AllPropertyDefs["MONTH"].DataType;
                    return (MonthsEnum?)(int)dataType.ConvertValue(val);
                }
            }

            public int? Year
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["YEAR"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTPERIODDEFINITION"].AllPropertyDefs["YEAR"].DataType;
                    return (int?)dataType.ConvertValue(val);
                }
            }

            public string Code
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["CODE"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHERCODEDEFINITION"].AllPropertyDefs["CODE"].DataType;
                    return (string)dataType.ConvertValue(val);
                }
            }

            public string Description
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["DESCRIPTION"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHERCODEDEFINITION"].AllPropertyDefs["DESCRIPTION"].DataType;
                    return (string)dataType.ConvertValue(val);
                }
            }

            public GetAccountVoucherWithParam_Class(TTObjectContext objectContext, string objectDefName, DataRow row) : base(objectContext, objectDefName, row) { }
            public GetAccountVoucherWithParam_Class(SerializationInfo info, StreamingContext context) : base(info, context) { }
            protected GetAccountVoucherWithParam_Class() : base() { }
        }

        [Serializable] 

        public partial class GetAllAccountVouchers_Class : TTReportNqlObject 
        {
            public Guid? ObjectID
            {
                get
                {
                    return ConnectionManager.FromDBNullableGuid(_dataRow["OBJECTID"]);
                }
            }

            public Guid? ObjectDefID
            {
                get
                {
                    return ConnectionManager.FromDBNullableGuid(_dataRow["OBJECTDEFID"]);
                }
            }

            public Guid? CurrentStateDefID
            {
                get
                {
                    return ConnectionManager.FromDBNullableGuid(_dataRow["CURRENTSTATEDEFID"]);
                }
            }

            public DateTime? LastUpdate
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["LASTUPDATE"]);
                    if (val == null)
                        return null;
                    return (DateTime)Convert.ChangeType(val, typeof(DateTime)); 
                }
            }

            public VoucherTypeEnum? VoucherType
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["VOUCHERTYPE"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].AllPropertyDefs["VOUCHERTYPE"].DataType;
                    return (VoucherTypeEnum?)(int)dataType.ConvertValue(val);
                }
            }

            public bool? IsAutoGenerated
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["ISAUTOGENERATED"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].AllPropertyDefs["ISAUTOGENERATED"].DataType;
                    return (bool?)dataType.ConvertValue(val);
                }
            }

            public Currency? TotalPrice
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["TOTALPRICE"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].AllPropertyDefs["TOTALPRICE"].DataType;
                    return (Currency?)dataType.ConvertValue(val);
                }
            }

            public bool? IsDept
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["ISDEPT"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].AllPropertyDefs["ISDEPT"].DataType;
                    return (bool?)dataType.ConvertValue(val);
                }
            }

            public MonthsEnum? Month
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["MONTH"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTPERIODDEFINITION"].AllPropertyDefs["MONTH"].DataType;
                    return (MonthsEnum?)(int)dataType.ConvertValue(val);
                }
            }

            public int? Year
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["YEAR"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTPERIODDEFINITION"].AllPropertyDefs["YEAR"].DataType;
                    return (int?)dataType.ConvertValue(val);
                }
            }

            public string Code
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["CODE"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHERCODEDEFINITION"].AllPropertyDefs["CODE"].DataType;
                    return (string)dataType.ConvertValue(val);
                }
            }

            public string Description
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["DESCRIPTION"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHERCODEDEFINITION"].AllPropertyDefs["DESCRIPTION"].DataType;
                    return (string)dataType.ConvertValue(val);
                }
            }

            public Object Vtype
            {
                get
                {
                    return Globals.FromDBValue(_dataRow["VTYPE"]);
                }
            }

            public string Name
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["NAME"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["SUPPLIER"].AllPropertyDefs["NAME"].DataType;
                    return (string)dataType.ConvertValue(val);
                }
            }

            public GetAllAccountVouchers_Class(TTObjectContext objectContext, string objectDefName, DataRow row) : base(objectContext, objectDefName, row) { }
            public GetAllAccountVouchers_Class(SerializationInfo info, StreamingContext context) : base(info, context) { }
            protected GetAllAccountVouchers_Class() : base() { }
        }

        [Serializable] 

        public partial class GetIsCodeAndPeriod_Class : TTReportNqlObject 
        {
            public Guid? ObjectID
            {
                get
                {
                    return ConnectionManager.FromDBNullableGuid(_dataRow["OBJECTID"]);
                }
            }

            public Guid? ObjectDefID
            {
                get
                {
                    return ConnectionManager.FromDBNullableGuid(_dataRow["OBJECTDEFID"]);
                }
            }

            public Guid? CurrentStateDefID
            {
                get
                {
                    return ConnectionManager.FromDBNullableGuid(_dataRow["CURRENTSTATEDEFID"]);
                }
            }

            public DateTime? LastUpdate
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["LASTUPDATE"]);
                    if (val == null)
                        return null;
                    return (DateTime)Convert.ChangeType(val, typeof(DateTime)); 
                }
            }

            public VoucherTypeEnum? VoucherType
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["VOUCHERTYPE"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].AllPropertyDefs["VOUCHERTYPE"].DataType;
                    return (VoucherTypeEnum?)(int)dataType.ConvertValue(val);
                }
            }

            public bool? IsAutoGenerated
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["ISAUTOGENERATED"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].AllPropertyDefs["ISAUTOGENERATED"].DataType;
                    return (bool?)dataType.ConvertValue(val);
                }
            }

            public Currency? TotalPrice
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["TOTALPRICE"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].AllPropertyDefs["TOTALPRICE"].DataType;
                    return (Currency?)dataType.ConvertValue(val);
                }
            }

            public bool? IsDept
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["ISDEPT"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].AllPropertyDefs["ISDEPT"].DataType;
                    return (bool?)dataType.ConvertValue(val);
                }
            }

            public GetIsCodeAndPeriod_Class(TTObjectContext objectContext, string objectDefName, DataRow row) : base(objectContext, objectDefName, row) { }
            public GetIsCodeAndPeriod_Class(SerializationInfo info, StreamingContext context) : base(info, context) { }
            protected GetIsCodeAndPeriod_Class() : base() { }
        }

        [Serializable] 

        public partial class GetAccountVoucherDept_Class : TTReportNqlObject 
        {
            public Guid? ObjectID
            {
                get
                {
                    return ConnectionManager.FromDBNullableGuid(_dataRow["OBJECTID"]);
                }
            }

            public Guid? ObjectDefID
            {
                get
                {
                    return ConnectionManager.FromDBNullableGuid(_dataRow["OBJECTDEFID"]);
                }
            }

            public Guid? CurrentStateDefID
            {
                get
                {
                    return ConnectionManager.FromDBNullableGuid(_dataRow["CURRENTSTATEDEFID"]);
                }
            }

            public DateTime? LastUpdate
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["LASTUPDATE"]);
                    if (val == null)
                        return null;
                    return (DateTime)Convert.ChangeType(val, typeof(DateTime)); 
                }
            }

            public VoucherTypeEnum? VoucherType
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["VOUCHERTYPE"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].AllPropertyDefs["VOUCHERTYPE"].DataType;
                    return (VoucherTypeEnum?)(int)dataType.ConvertValue(val);
                }
            }

            public bool? IsAutoGenerated
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["ISAUTOGENERATED"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].AllPropertyDefs["ISAUTOGENERATED"].DataType;
                    return (bool?)dataType.ConvertValue(val);
                }
            }

            public Currency? TotalPrice
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["TOTALPRICE"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].AllPropertyDefs["TOTALPRICE"].DataType;
                    return (Currency?)dataType.ConvertValue(val);
                }
            }

            public bool? IsDept
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["ISDEPT"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].AllPropertyDefs["ISDEPT"].DataType;
                    return (bool?)dataType.ConvertValue(val);
                }
            }

            public MonthsEnum? Month
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["MONTH"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTPERIODDEFINITION"].AllPropertyDefs["MONTH"].DataType;
                    return (MonthsEnum?)(int)dataType.ConvertValue(val);
                }
            }

            public int? Year
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["YEAR"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTPERIODDEFINITION"].AllPropertyDefs["YEAR"].DataType;
                    return (int?)dataType.ConvertValue(val);
                }
            }

            public string Code
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["CODE"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHERCODEDEFINITION"].AllPropertyDefs["CODE"].DataType;
                    return (string)dataType.ConvertValue(val);
                }
            }

            public string Description
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["DESCRIPTION"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHERCODEDEFINITION"].AllPropertyDefs["DESCRIPTION"].DataType;
                    return (string)dataType.ConvertValue(val);
                }
            }

            public GetAccountVoucherDept_Class(TTObjectContext objectContext, string objectDefName, DataRow row) : base(objectContext, objectDefName, row) { }
            public GetAccountVoucherDept_Class(SerializationInfo info, StreamingContext context) : base(info, context) { }
            protected GetAccountVoucherDept_Class() : base() { }
        }

        [Serializable] 

        public partial class GetAccountVoucherIsDept_Class : TTReportNqlObject 
        {
            public Guid? ObjectID
            {
                get
                {
                    return ConnectionManager.FromDBNullableGuid(_dataRow["OBJECTID"]);
                }
            }

            public Guid? ObjectDefID
            {
                get
                {
                    return ConnectionManager.FromDBNullableGuid(_dataRow["OBJECTDEFID"]);
                }
            }

            public Guid? CurrentStateDefID
            {
                get
                {
                    return ConnectionManager.FromDBNullableGuid(_dataRow["CURRENTSTATEDEFID"]);
                }
            }

            public DateTime? LastUpdate
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["LASTUPDATE"]);
                    if (val == null)
                        return null;
                    return (DateTime)Convert.ChangeType(val, typeof(DateTime)); 
                }
            }

            public VoucherTypeEnum? VoucherType
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["VOUCHERTYPE"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].AllPropertyDefs["VOUCHERTYPE"].DataType;
                    return (VoucherTypeEnum?)(int)dataType.ConvertValue(val);
                }
            }

            public bool? IsAutoGenerated
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["ISAUTOGENERATED"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].AllPropertyDefs["ISAUTOGENERATED"].DataType;
                    return (bool?)dataType.ConvertValue(val);
                }
            }

            public Currency? TotalPrice
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["TOTALPRICE"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].AllPropertyDefs["TOTALPRICE"].DataType;
                    return (Currency?)dataType.ConvertValue(val);
                }
            }

            public bool? IsDept
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["ISDEPT"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].AllPropertyDefs["ISDEPT"].DataType;
                    return (bool?)dataType.ConvertValue(val);
                }
            }

            public MonthsEnum? Month
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["MONTH"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTPERIODDEFINITION"].AllPropertyDefs["MONTH"].DataType;
                    return (MonthsEnum?)(int)dataType.ConvertValue(val);
                }
            }

            public int? Year
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["YEAR"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTPERIODDEFINITION"].AllPropertyDefs["YEAR"].DataType;
                    return (int?)dataType.ConvertValue(val);
                }
            }

            public string Code
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["CODE"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHERCODEDEFINITION"].AllPropertyDefs["CODE"].DataType;
                    return (string)dataType.ConvertValue(val);
                }
            }

            public string Description
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["DESCRIPTION"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHERCODEDEFINITION"].AllPropertyDefs["DESCRIPTION"].DataType;
                    return (string)dataType.ConvertValue(val);
                }
            }

            public GetAccountVoucherIsDept_Class(TTObjectContext objectContext, string objectDefName, DataRow row) : base(objectContext, objectDefName, row) { }
            public GetAccountVoucherIsDept_Class(SerializationInfo info, StreamingContext context) : base(info, context) { }
            protected GetAccountVoucherIsDept_Class() : base() { }
        }

        public static class States
        {
            public static Guid Completed { get { return new Guid("2b4bfe99-f47c-4a10-97ca-2e079c695db3"); } }
            public static Guid Cancelled { get { return new Guid("0193d053-6cda-4637-83b5-3c01a7fa8287"); } }
        }

    /// <summary>
    /// Gelir Gider Toplam Yekün Sorgusu
    /// </summary>
        public static BindingList<AccountVoucher.GetAccountVoucherTotal_Class> GetAccountVoucherTotal(int Year, int Month, string injectionSQL = null, PaginationInfo pi = null)
        {
            TTQueryDef queryDef = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].QueryDefs["GetAccountVoucherTotal"];
            Dictionary<string, object> paramList = new Dictionary<string, object>();
            paramList.Add("YEAR", Year);
            paramList.Add("MONTH", Month);

            return TTReportNqlObject.QueryObjects<AccountVoucher.GetAccountVoucherTotal_Class>(queryDef, paramList, injectionSQL, pi);
        }

    /// <summary>
    /// Gelir Gider Toplam Yekün Sorgusu
    /// </summary>
        public static BindingList<AccountVoucher.GetAccountVoucherTotal_Class> GetAccountVoucherTotal(TTObjectContext objectContext, int Year, int Month, string injectionSQL = null, PaginationInfo pi = null)
        {
            TTQueryDef queryDef = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].QueryDefs["GetAccountVoucherTotal"];
            Dictionary<string, object> paramList = new Dictionary<string, object>();
            paramList.Add("YEAR", Year);
            paramList.Add("MONTH", Month);

            return TTReportNqlObject.QueryObjects<AccountVoucher.GetAccountVoucherTotal_Class>(objectContext, queryDef, paramList, injectionSQL, pi);
        }

        public static BindingList<AccountVoucher.GetAccountVoucherWithParam_Class> GetAccountVoucherWithParam(int Month, int Year, PaginationInfo pi = null)
        {
            TTQueryDef queryDef = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].QueryDefs["GetAccountVoucherWithParam"];
            Dictionary<string, object> paramList = new Dictionary<string, object>();
            paramList.Add("MONTH", Month);
            paramList.Add("YEAR", Year);

            return TTReportNqlObject.QueryObjects<AccountVoucher.GetAccountVoucherWithParam_Class>(queryDef, paramList, pi);
        }

        public static BindingList<AccountVoucher.GetAccountVoucherWithParam_Class> GetAccountVoucherWithParam(TTObjectContext objectContext, int Month, int Year, PaginationInfo pi = null)
        {
            TTQueryDef queryDef = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].QueryDefs["GetAccountVoucherWithParam"];
            Dictionary<string, object> paramList = new Dictionary<string, object>();
            paramList.Add("MONTH", Month);
            paramList.Add("YEAR", Year);

            return TTReportNqlObject.QueryObjects<AccountVoucher.GetAccountVoucherWithParam_Class>(objectContext, queryDef, paramList, pi);
        }

        public static BindingList<AccountVoucher.GetAllAccountVouchers_Class> GetAllAccountVouchers(PaginationInfo pi = null)
        {
            TTQueryDef queryDef = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].QueryDefs["GetAllAccountVouchers"];
            Dictionary<string, object> paramList = new Dictionary<string, object>();

            return TTReportNqlObject.QueryObjects<AccountVoucher.GetAllAccountVouchers_Class>(queryDef, paramList, pi);
        }

        public static BindingList<AccountVoucher.GetAllAccountVouchers_Class> GetAllAccountVouchers(TTObjectContext objectContext, PaginationInfo pi = null)
        {
            TTQueryDef queryDef = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].QueryDefs["GetAllAccountVouchers"];
            Dictionary<string, object> paramList = new Dictionary<string, object>();

            return TTReportNqlObject.QueryObjects<AccountVoucher.GetAllAccountVouchers_Class>(objectContext, queryDef, paramList, pi);
        }

        public static BindingList<AccountVoucher.GetIsCodeAndPeriod_Class> GetIsCodeAndPeriod(string AccountPeriod, string Code, PaginationInfo pi = null)
        {
            TTQueryDef queryDef = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].QueryDefs["GetIsCodeAndPeriod"];
            Dictionary<string, object> paramList = new Dictionary<string, object>();
            paramList.Add("ACCOUNTPERIOD", AccountPeriod);
            paramList.Add("CODE", Code);

            return TTReportNqlObject.QueryObjects<AccountVoucher.GetIsCodeAndPeriod_Class>(queryDef, paramList, pi);
        }

        public static BindingList<AccountVoucher.GetIsCodeAndPeriod_Class> GetIsCodeAndPeriod(TTObjectContext objectContext, string AccountPeriod, string Code, PaginationInfo pi = null)
        {
            TTQueryDef queryDef = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].QueryDefs["GetIsCodeAndPeriod"];
            Dictionary<string, object> paramList = new Dictionary<string, object>();
            paramList.Add("ACCOUNTPERIOD", AccountPeriod);
            paramList.Add("CODE", Code);

            return TTReportNqlObject.QueryObjects<AccountVoucher.GetIsCodeAndPeriod_Class>(objectContext, queryDef, paramList, pi);
        }

    /// <summary>
    /// Gelir Raporu Sorgusu
    /// </summary>
        public static BindingList<AccountVoucher.GetAccountVoucherDept_Class> GetAccountVoucherDept(int Month, int Year, PaginationInfo pi = null)
        {
            TTQueryDef queryDef = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].QueryDefs["GetAccountVoucherDept"];
            Dictionary<string, object> paramList = new Dictionary<string, object>();
            paramList.Add("MONTH", Month);
            paramList.Add("YEAR", Year);

            return TTReportNqlObject.QueryObjects<AccountVoucher.GetAccountVoucherDept_Class>(queryDef, paramList, pi);
        }

    /// <summary>
    /// Gelir Raporu Sorgusu
    /// </summary>
        public static BindingList<AccountVoucher.GetAccountVoucherDept_Class> GetAccountVoucherDept(TTObjectContext objectContext, int Month, int Year, PaginationInfo pi = null)
        {
            TTQueryDef queryDef = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].QueryDefs["GetAccountVoucherDept"];
            Dictionary<string, object> paramList = new Dictionary<string, object>();
            paramList.Add("MONTH", Month);
            paramList.Add("YEAR", Year);

            return TTReportNqlObject.QueryObjects<AccountVoucher.GetAccountVoucherDept_Class>(objectContext, queryDef, paramList, pi);
        }

    /// <summary>
    /// Gider Raporu Sorgusu
    /// </summary>
        public static BindingList<AccountVoucher.GetAccountVoucherIsDept_Class> GetAccountVoucherIsDept(int Month, int Year, PaginationInfo pi = null)
        {
            TTQueryDef queryDef = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].QueryDefs["GetAccountVoucherIsDept"];
            Dictionary<string, object> paramList = new Dictionary<string, object>();
            paramList.Add("MONTH", Month);
            paramList.Add("YEAR", Year);

            return TTReportNqlObject.QueryObjects<AccountVoucher.GetAccountVoucherIsDept_Class>(queryDef, paramList, pi);
        }

    /// <summary>
    /// Gider Raporu Sorgusu
    /// </summary>
        public static BindingList<AccountVoucher.GetAccountVoucherIsDept_Class> GetAccountVoucherIsDept(TTObjectContext objectContext, int Month, int Year, PaginationInfo pi = null)
        {
            TTQueryDef queryDef = TTObjectDefManager.Instance.ObjectDefs["ACCOUNTVOUCHER"].QueryDefs["GetAccountVoucherIsDept"];
            Dictionary<string, object> paramList = new Dictionary<string, object>();
            paramList.Add("MONTH", Month);
            paramList.Add("YEAR", Year);

            return TTReportNqlObject.QueryObjects<AccountVoucher.GetAccountVoucherIsDept_Class>(objectContext, queryDef, paramList, pi);
        }

        public VoucherTypeEnum? VoucherType
        {
            get { return (VoucherTypeEnum?)(int?)this["VOUCHERTYPE"]; }
            set { this["VOUCHERTYPE"] = value; }
        }

    /// <summary>
    /// Otomatik
    /// </summary>
        public bool? IsAutoGenerated
        {
            get { return (bool?)this["ISAUTOGENERATED"]; }
            set { this["ISAUTOGENERATED"] = value; }
        }

        public Currency? TotalPrice
        {
            get { return (Currency?)this["TOTALPRICE"]; }
            set { this["TOTALPRICE"] = value; }
        }

        public bool? IsDept
        {
            get { return (bool?)this["ISDEPT"]; }
            set { this["ISDEPT"] = value; }
        }

        public Supplier Supplier
        {
            get { return (Supplier)((ITTObject)this).GetParent("SUPPLIER"); }
            set { this["SUPPLIER"] = (value==null ? null : (Guid?)value.ObjectID); }
        }

    /// <summary>
    /// Dönem Bilgisi
    /// </summary>
        public AccountPeriodDefinition AccountPeriod
        {
            get { return (AccountPeriodDefinition)((ITTObject)this).GetParent("ACCOUNTPERIOD"); }
            set { this["ACCOUNTPERIOD"] = (value==null ? null : (Guid?)value.ObjectID); }
        }

        public AccountancyAddingAction AccountancyAddingAction
        {
            get { return (AccountancyAddingAction)((ITTObject)this).GetParent("ACCOUNTANCYADDINGACTION"); }
            set { this["ACCOUNTANCYADDINGACTION"] = (value==null ? null : (Guid?)value.ObjectID); }
        }

        public AccountVoucherCodeDefinition AccountVoucherCodeDefinition
        {
            get { return (AccountVoucherCodeDefinition)((ITTObject)this).GetParent("ACCOUNTVOUCHERCODEDEFINITION"); }
            set { this["ACCOUNTVOUCHERCODEDEFINITION"] = (value==null ? null : (Guid?)value.ObjectID); }
        }

        virtual protected void CreateAccountVoucherDetailsCollection()
        {
            _AccountVoucherDetails = new AccountVoucherDetail.ChildAccountVoucherDetailCollection(this, new Guid("cf7600f8-2cff-4d7b-a0ac-62918a847697"));
            ((ITTChildObjectCollection)_AccountVoucherDetails).GetChildren();
        }

        protected AccountVoucherDetail.ChildAccountVoucherDetailCollection _AccountVoucherDetails = null;
        public AccountVoucherDetail.ChildAccountVoucherDetailCollection AccountVoucherDetails
        {
            get
            {
                if (_AccountVoucherDetails == null)
                    CreateAccountVoucherDetailsCollection();
                return _AccountVoucherDetails;
            }
        }

        protected AccountVoucher(TTObjectContext objectContext, string objectDefName, DataRow dataRow) : base(objectContext, objectDefName, dataRow) { }
        protected AccountVoucher(TTObjectContext objectContext, string objectDefName, DataRow dataRow, bool isImported) : base(objectContext, objectDefName, dataRow, isImported) { }
        protected AccountVoucher(TTObjectContext objectContext, string objectDefName, Guid objectID) : base(objectContext, objectDefName, objectID) { }
        protected AccountVoucher(TTObjectContext objectContext, string objectDefName, Guid objectID, bool isImported) : base(objectContext, objectDefName, objectID, isImported) { }
        protected AccountVoucher(TTObjectContext objectContext, DataRow dataRow) : base(objectContext, "ACCOUNTVOUCHER", dataRow) { }
        protected AccountVoucher(TTObjectContext objectContext, DataRow dataRow, bool isImported) : base(objectContext, "ACCOUNTVOUCHER", dataRow, isImported) { }
        public AccountVoucher(TTObjectContext objectContext) : this(objectContext, (DataRow)null) { }

        public AccountVoucher(SerializationInfo info, StreamingContext context) : base(info, context) { }

        public AccountVoucher() : base() { }

        override protected void RunPreTransition(TTObjectStateTransitionDef transDef)
        {
            if (MustCallBasePreScript(transDef))
                base.RunPreTransition(transDef.BaseTransDef);
            this.PreTransition(transDef);
        }
        override protected void RunPostTransition(TTObjectStateTransitionDef transDef)
        {
            if (MustCallBasePostScript(transDef))
                base.RunPostTransition(transDef.BaseTransDef);
            this.PostTransition(transDef);
        }
        override protected void RunUndoTransition(TTObjectStateTransitionDef transDef)
        {
            if (MustCallBaseUndoScript(transDef))
                base.RunUndoTransition(transDef.BaseTransDef);
            this.UndoTransition(transDef);
        }
    }
}