
using System;
using System.Xml;
using System.Data;
using System.Text;
using System.Drawing;
using System.Reflection;
using System.Collections;
using System.Linq;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Collections.ObjectModel;
using System.Runtime.InteropServices;

using TTUtils;
using TTObjectClasses;
using TTDataDictionary;
using TTCoreDefinitions;
using TTConnectionManager;
using TTInstanceManagement;
using TTDefinitionManagement;
using TTStorageManager.Security;

using TTStorageManager;
using System.Runtime.Versioning;
namespace TTObjectClasses
{
    [Serializable, TTStorageManager.Attributes.ObjectDefAttribute(Name="InvoiceCollection")] 

    /// <summary>
    /// İcmal
    /// </summary>
    public  partial class InvoiceCollection : AccountAction
    {
        public class InvoiceCollectionList : TTObjectCollection<InvoiceCollection> { }
                    
        public class ChildInvoiceCollectionCollection : TTObject.TTChildObjectCollection<InvoiceCollection>
        {
            public ChildInvoiceCollectionCollection(TTObject parent, Guid relDefID) : base(parent, relDefID) { }
            public ChildInvoiceCollectionCollection(TTObject.ITTChildObjectCollection parentCollection, string relSubtypeDefName) : base(parentCollection, relSubtypeDefName) { }
        }
                    
        [Serializable] 

        public partial class GetInvoiceCollectionByInjection_Class : TTReportNqlObject 
        {
            public Guid? ObjectID
            {
                get
                {
                    return ConnectionManager.FromDBNullableGuid(_dataRow["OBJECTID"]);
                }
            }

            public long? No
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["NO"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["INVOICECOLLECTION"].AllPropertyDefs["NO"].DataType;
                    return (long?)dataType.ConvertValue(val);
                }
            }

            public string Name
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["NAME"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["INVOICECOLLECTION"].AllPropertyDefs["NAME"].DataType;
                    return (string)dataType.ConvertValue(val);
                }
            }

            public DateTime? Date
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["DATE"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["INVOICECOLLECTION"].AllPropertyDefs["DATE"].DataType;
                    return (DateTime?)dataType.ConvertValue(val);
                }
            }

            public int? Capacity
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["CAPACITY"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["INVOICECOLLECTION"].AllPropertyDefs["CAPACITY"].DataType;
                    return (int?)dataType.ConvertValue(val);
                }
            }

            public Guid? InvoiceTerm
            {
                get
                {
                    return ConnectionManager.FromDBNullableGuid(_dataRow["INVOICETERM"]);
                }
            }

            public string Invoicetermname
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["INVOICETERMNAME"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["INVOICETERM"].AllPropertyDefs["NAME"].DataType;
                    return (string)dataType.ConvertValue(val);
                }
            }

            public bool? IsAutoGenerated
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["ISAUTOGENERATED"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["INVOICECOLLECTION"].AllPropertyDefs["ISAUTOGENERATED"].DataType;
                    return (bool?)dataType.ConvertValue(val);
                }
            }

            public Guid? Payer
            {
                get
                {
                    return ConnectionManager.FromDBNullableGuid(_dataRow["PAYER"]);
                }
            }

            public string Payername
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["PAYERNAME"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["PAYERDEFINITION"].AllPropertyDefs["NAME"].DataType;
                    return (string)dataType.ConvertValue(val);
                }
            }

            public DateTime? LastPaymentDate
            {
                get
                {
                    object val = Globals.FromDBValue(_dataRow["LASTPAYMENTDATE"]);
                    if (val == null)
                        return null;
                    TTDataType dataType = TTObjectDefManager.Instance.ObjectDefs["INVOICECOLLECTION"].AllPropertyDefs["LASTPAYMENTDATE"].DataType;
                    return (DateTime?)dataType.ConvertValue(val);
                }
            }

            public Guid? CurrentStateDefID
            {
                get
                {
                    return ConnectionManager.FromDBNullableGuid(_dataRow["CURRENTSTATEDEFID"]);
                }
            }

            public Object Statedisplaytext
            {
                get
                {
                    return Globals.FromDBValue(_dataRow["STATEDISPLAYTEXT"]);
                }
            }

            public Object Invoicecount
            {
                get
                {
                    return Globals.FromDBValue(_dataRow["INVOICECOUNT"]);
                }
            }

            public Object Invoiceprice
            {
                get
                {
                    return Globals.FromDBValue(_dataRow["INVOICEPRICE"]);
                }
            }

            public Object Paymentprice
            {
                get
                {
                    return Globals.FromDBValue(_dataRow["PAYMENTPRICE"]);
                }
            }

            public Object Deduction
            {
                get
                {
                    return Globals.FromDBValue(_dataRow["DEDUCTION"]);
                }
            }

            public GetInvoiceCollectionByInjection_Class(TTObjectContext objectContext, string objectDefName, DataRow row) : base(objectContext, objectDefName, row) { }
            public GetInvoiceCollectionByInjection_Class(SerializationInfo info, StreamingContext context) : base(info, context) { }
            protected GetInvoiceCollectionByInjection_Class() : base() { }
        }

        public static class States
        {
    /// <summary>
    /// Kısmen Ödendi
    /// </summary>
            public static Guid PartialPaid { get { return new Guid("6840c027-815c-46e9-9910-2f44a003afb1"); } }
    /// <summary>
    /// Ödendi
    /// </summary>
            public static Guid Paid { get { return new Guid("df4d8d1b-16ec-40c5-b0d4-e637e1df6e68"); } }
    /// <summary>
    /// Açık
    /// </summary>
            public static Guid Open { get { return new Guid("b43f4bed-22bf-47f3-8e66-e27bf4104bba"); } }
    /// <summary>
    /// Kapalı
    /// </summary>
            public static Guid Closed { get { return new Guid("d59afd89-c416-47dc-a2c8-a26237d0ab2b"); } }
    /// <summary>
    /// Kilitli
    /// </summary>
            public static Guid Locked { get { return new Guid("64532439-8443-420b-a58b-ea766797a601"); } }
            public static Guid Cancelled { get { return new Guid("e3bafb1f-3751-4887-91a5-b0cb596141d1"); } }
    /// <summary>
    /// Postaya Gönderim
    /// </summary>
            public static Guid Send { get { return new Guid("ce8dac66-6aa4-41c0-871f-1248c7b334ce"); } }
    /// <summary>
    /// Kuruma Teslim
    /// </summary>
            public static Guid Delivered { get { return new Guid("d08f8477-2371-4c78-9faf-5c9da793cf07"); } }
        }

        public static BindingList<InvoiceCollection> GetICbyTerm(TTObjectContext objectContext, Guid TERM)
        {
            TTQueryDef queryDef = TTObjectDefManager.Instance.ObjectDefs["INVOICECOLLECTION"].QueryDefs["GetICbyTerm"];
            Dictionary<string, object> paramList = new Dictionary<string, object>();
            paramList.Add("TERM", TERM);

            return ((ITTQuery)objectContext).QueryObjects<InvoiceCollection>(queryDef, paramList);
        }

        public static BindingList<InvoiceCollection.GetInvoiceCollectionByInjection_Class> GetInvoiceCollectionByInjection(string injectionSQL, PaginationInfo pi = null)
        {
            TTQueryDef queryDef = TTObjectDefManager.Instance.ObjectDefs["INVOICECOLLECTION"].QueryDefs["GetInvoiceCollectionByInjection"];
            Dictionary<string, object> paramList = new Dictionary<string, object>();

            return TTReportNqlObject.QueryObjects<InvoiceCollection.GetInvoiceCollectionByInjection_Class>(queryDef, paramList, injectionSQL, pi);
        }

        public static BindingList<InvoiceCollection.GetInvoiceCollectionByInjection_Class> GetInvoiceCollectionByInjection(TTObjectContext objectContext, string injectionSQL, PaginationInfo pi = null)
        {
            TTQueryDef queryDef = TTObjectDefManager.Instance.ObjectDefs["INVOICECOLLECTION"].QueryDefs["GetInvoiceCollectionByInjection"];
            Dictionary<string, object> paramList = new Dictionary<string, object>();

            return TTReportNqlObject.QueryObjects<InvoiceCollection.GetInvoiceCollectionByInjection_Class>(objectContext, queryDef, paramList, injectionSQL, pi);
        }

    /// <summary>
    /// Not
    /// </summary>
        public string Note
        {
            get { return (string)this["NOTE"]; }
            set { this["NOTE"] = value; }
        }

    /// <summary>
    /// Postaya Gönderim Numarası
    /// </summary>
        public string SendingNo
        {
            get { return (string)this["SENDINGNO"]; }
            set { this["SENDINGNO"] = value; }
        }

    /// <summary>
    /// İcmal Numarası
    /// </summary>
        public TTSequence No
        {
            get { return GetSequence("NO"); }
        }

    /// <summary>
    /// Adı
    /// </summary>
        public string Name
        {
            get { return (string)this["NAME"]; }
            set { this["NAME"] = value; }
        }

    /// <summary>
    /// Son İşlem Tarihi
    /// </summary>
        public DateTime? LastStateDate
        {
            get { return (DateTime?)this["LASTSTATEDATE"]; }
            set { this["LASTSTATEDATE"] = value; }
        }

    /// <summary>
    /// Kapasite
    /// </summary>
        public int? Capacity
        {
            get { return (int?)this["CAPACITY"]; }
            set { this["CAPACITY"] = value; }
        }

    /// <summary>
    /// Tarih
    /// </summary>
        public DateTime? Date
        {
            get { return (DateTime?)this["DATE"]; }
            set { this["DATE"] = value; }
        }

    /// <summary>
    /// Otomatik
    /// </summary>
        public bool? IsAutoGenerated
        {
            get { return (bool?)this["ISAUTOGENERATED"]; }
            set { this["ISAUTOGENERATED"] = value; }
        }

    /// <summary>
    /// Postaya Gönderim Tarihi
    /// </summary>
        public DateTime? SendingDate
        {
            get { return (DateTime?)this["SENDINGDATE"]; }
            set { this["SENDINGDATE"] = value; }
        }

    /// <summary>
    /// Kuruma Teslim Tarihi
    /// </summary>
        public DateTime? DeliveredDate
        {
            get { return (DateTime?)this["DELIVEREDDATE"]; }
            set { this["DELIVEREDDATE"] = value; }
        }

    /// <summary>
    /// İcmal Tipi
    /// </summary>
        public InvoiceCollectionTypeEnum? Type
        {
            get { return (InvoiceCollectionTypeEnum?)(int?)this["TYPE"]; }
            set { this["TYPE"] = value; }
        }

    /// <summary>
    /// Genel İcmal mi
    /// </summary>
        public bool? IsGeneral
        {
            get { return (bool?)this["ISGENERAL"]; }
            set { this["ISGENERAL"] = value; }
        }

    /// <summary>
    /// Son Ödeme Tarihi
    /// </summary>
        public DateTime? LastPaymentDate
        {
            get { return (DateTime?)this["LASTPAYMENTDATE"]; }
            set { this["LASTPAYMENTDATE"] = value; }
        }

    /// <summary>
    /// Vade Gün Süresi
    /// </summary>
        public int? TermDay
        {
            get { return (int?)this["TERMDAY"]; }
            set { this["TERMDAY"] = value; }
        }

    /// <summary>
    /// Oluşturan kullanıcı
    /// </summary>
        public ResUser CreateUser
        {
            get { return (ResUser)((ITTObject)this).GetParent("CREATEUSER"); }
            set { this["CREATEUSER"] = (value==null ? null : (Guid?)value.ObjectID); }
        }

        public TakipTipi TakipTipi
        {
            get { return (TakipTipi)((ITTObject)this).GetParent("TAKIPTIPI"); }
            set { this["TAKIPTIPI"] = (value==null ? null : (Guid?)value.ObjectID); }
        }

    /// <summary>
    /// Icmalin Kurum Bilgisi
    /// </summary>
        public PayerDefinition Payer
        {
            get { return (PayerDefinition)((ITTObject)this).GetParent("PAYER"); }
            set { this["PAYER"] = (value==null ? null : (Guid?)value.ObjectID); }
        }

        public TedaviTipi TedaviTipi
        {
            get { return (TedaviTipi)((ITTObject)this).GetParent("TEDAVITIPI"); }
            set { this["TEDAVITIPI"] = (value==null ? null : (Guid?)value.ObjectID); }
        }

        public TedaviTuru TedaviTuru
        {
            get { return (TedaviTuru)((ITTObject)this).GetParent("TEDAVITURU"); }
            set { this["TEDAVITURU"] = (value==null ? null : (Guid?)value.ObjectID); }
        }

        public ProvizyonTipi ProvizyonTipi
        {
            get { return (ProvizyonTipi)((ITTObject)this).GetParent("PROVIZYONTIPI"); }
            set { this["PROVIZYONTIPI"] = (value==null ? null : (Guid?)value.ObjectID); }
        }

    /// <summary>
    /// Icmalin hangi döneme bağlı olduğu bilgisi
    /// </summary>
        public InvoiceTerm InvoiceTerm
        {
            get { return (InvoiceTerm)((ITTObject)this).GetParent("INVOICETERM"); }
            set { this["INVOICETERM"] = (value==null ? null : (Guid?)value.ObjectID); }
        }

        public InvoiceCollectionDocument InvoiceCollectionDocument
        {
            get { return (InvoiceCollectionDocument)((ITTObject)this).GetParent("INVOICECOLLECTIONDOCUMENT"); }
            set { this["INVOICECOLLECTIONDOCUMENT"] = (value==null ? null : (Guid?)value.ObjectID); }
        }

    /// <summary>
    /// Son state geçinini yapan kullanıcı
    /// </summary>
        public ResUser LastStateUser
        {
            get { return (ResUser)((ITTObject)this).GetParent("LASTSTATEUSER"); }
            set { this["LASTSTATEUSER"] = (value==null ? null : (Guid?)value.ObjectID); }
        }

        public InvoiceCollection ParentInvoiceCollection
        {
            get { return (InvoiceCollection)((ITTObject)this).GetParent("PARENTINVOICECOLLECTION"); }
            set { this["PARENTINVOICECOLLECTION"] = (value==null ? null : (Guid?)value.ObjectID); }
        }

        override protected void CreateAccountDocumentsCollection()
        {
            _AccountDocuments = new AccountDocument.ChildAccountDocumentCollection(this, new Guid("c0767934-ee1f-4ad4-8b70-b6c61f70cefb"));
            ((ITTChildObjectCollection)_AccountDocuments).GetChildren();
        }

        virtual protected void CreateInvoiceCollectionDetailsCollection()
        {
            _InvoiceCollectionDetails = new InvoiceCollectionDetail.ChildInvoiceCollectionDetailCollection(this, new Guid("dcc46ce1-2e46-46c3-be6a-9745d9eb4bc2"));
            ((ITTChildObjectCollection)_InvoiceCollectionDetails).GetChildren();
        }

        protected InvoiceCollectionDetail.ChildInvoiceCollectionDetailCollection _InvoiceCollectionDetails = null;
    /// <summary>
    /// Child collection for Fatura İcmal
    /// </summary>
        public InvoiceCollectionDetail.ChildInvoiceCollectionDetailCollection InvoiceCollectionDetails
        {
            get
            {
                if (_InvoiceCollectionDetails == null)
                    CreateInvoiceCollectionDetailsCollection();
                return _InvoiceCollectionDetails;
            }
        }

        virtual protected void CreateMergedInvoiceCollectionsCollection()
        {
            _MergedInvoiceCollections = new InvoiceCollection.ChildInvoiceCollectionCollection(this, new Guid("d8a10726-f6a9-4171-9be9-3b99925b3fd2"));
            ((ITTChildObjectCollection)_MergedInvoiceCollections).GetChildren();
        }

        protected InvoiceCollection.ChildInvoiceCollectionCollection _MergedInvoiceCollections = null;
        public InvoiceCollection.ChildInvoiceCollectionCollection MergedInvoiceCollections
        {
            get
            {
                if (_MergedInvoiceCollections == null)
                    CreateMergedInvoiceCollectionsCollection();
                return _MergedInvoiceCollections;
            }
        }

        protected InvoiceCollection(TTObjectContext objectContext, string objectDefName, DataRow dataRow) : base(objectContext, objectDefName, dataRow) { }
        protected InvoiceCollection(TTObjectContext objectContext, string objectDefName, DataRow dataRow, bool isImported) : base(objectContext, objectDefName, dataRow, isImported) { }
        protected InvoiceCollection(TTObjectContext objectContext, string objectDefName, Guid objectID) : base(objectContext, objectDefName, objectID) { }
        protected InvoiceCollection(TTObjectContext objectContext, string objectDefName, Guid objectID, bool isImported) : base(objectContext, objectDefName, objectID, isImported) { }
        protected InvoiceCollection(TTObjectContext objectContext, DataRow dataRow) : base(objectContext, "INVOICECOLLECTION", dataRow) { }
        protected InvoiceCollection(TTObjectContext objectContext, DataRow dataRow, bool isImported) : base(objectContext, "INVOICECOLLECTION", dataRow, isImported) { }
        public InvoiceCollection(TTObjectContext objectContext) : this(objectContext, (DataRow)null) { }

        public InvoiceCollection(SerializationInfo info, StreamingContext context) : base(info, context) { }

        public InvoiceCollection() : base() { }

        override protected void RunPreTransition(TTObjectStateTransitionDef transDef)
        {
            if (MustCallBasePreScript(transDef))
                base.RunPreTransition(transDef.BaseTransDef);
            this.PreTransition(transDef);
        }
        override protected void RunPostTransition(TTObjectStateTransitionDef transDef)
        {
            if (MustCallBasePostScript(transDef))
                base.RunPostTransition(transDef.BaseTransDef);
            this.PostTransition(transDef);
        }
        override protected void RunUndoTransition(TTObjectStateTransitionDef transDef)
        {
            if (MustCallBaseUndoScript(transDef))
                base.RunUndoTransition(transDef.BaseTransDef);
            this.UndoTransition(transDef);
        }
    }
}